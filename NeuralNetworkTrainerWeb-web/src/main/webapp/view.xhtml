<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core" 
      xmlns:c="http://java.sun.com/jsp/jstl/core">
    <h:head>
        <title>View/Change Neural Network</title>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></meta>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <link type="text/css" rel = "stylesheet" href="styles/view.css"/>
    </h:head>
    <f:metadata>
        <f:viewParam id="nameParam" name="name" required="true" requiredMessage="Name is required."/>
        <f:viewAction action="#{networkBean.initWithName(param['name'])}"/>
    </f:metadata>
    <h:body>
        <h:outputLink value="index.xhtml">Home page</h:outputLink>
        <br/>
        <h:message for="nameParam" style="color:red;font-weight: bold;"/>
        <br/>
        <h:outputText style="color:red;font-weight: bold;"
                      rendered="#{not networkBean.exist}"
                      value="Network with name &quot;#{param['name']}&quot; doesn't exist."/>

        <h:panelGrid columns="2" cellspacing="2">
            <h:outputText value="Name: "/>
            <h:inputText id="nameInput" readonly="true"
                         value="#{param['name']}"/>
            
            <h:outputText value="Signature: "/>
            <h:inputText readonly="true" value="#{networkBean.signature}"/>
        </h:panelGrid>
        <br/>
        <c:if test="#{networkBean.exist}">
            <div class="category-caption">WEIGHTS AND BIASES:</div>
            <c:forEach var="layerNum"
                    begin="0" end="#{networkBean.getNumberHiddenLayers()}">
                <table class="wb-table">
                    <tr>
                        <td></td>
                        <td colspan="#{networkBean.getLayerSize(layerNum) + 1}">
                            #{networkBean.getLayerNamesForLayer(layerNum)[1]}
                        </td>
                    </tr>
                    <tr>
                        <td rowspan="#{networkBean.getPrevLayerSizeForLayer(layerNum) + 1}">
                            #{networkBean.getLayerNamesForLayer(layerNum)[0]}
                        </td>
                        <td></td>
                        <c:forEach begin="1" end="#{networkBean.getLayerSize(layerNum)}" var="idx">
                            <td class="table-header">
                                <h:outputText value="Neuron #{idx}"/>
                            </td>
                        </c:forEach>
                    </tr>
                    <c:forEach begin="1" end="#{networkBean.getPrevLayerSizeForLayer(layerNum)}" 
                               var="prevIdx">
                        <tr>
                            <td class="table-header">
                                <h:outputText value="Neuron #{prevIdx}"/>
                            </td>
                            <c:forEach begin="1" 
                                       end="#{networkBean.getLayerSize(layerNum)}" 
                                       var="idx">
                                <td>
                                    #{networkBean.getWeightsForLayer(layerNum)[prevIdx - 1][idx - 1]}
                                </td>
                            </c:forEach>
                        </tr>
                    </c:forEach>
                    <tr class="biases-row">
                        <td></td>
                        <td class="table-header">
                            Biases
                        </td>
                        <c:forEach begin="1" 
                                    end="#{networkBean.getLayerSize(layerNum)}" 
                                    var="idx">
                            <td>
                                #{networkBean.getBiasesForLayer(layerNum)[idx - 1]}
                            </td>
                        </c:forEach>
                    </tr>
                </table>
                <br/>
            </c:forEach>
        </c:if>
    </h:body>
</html>
